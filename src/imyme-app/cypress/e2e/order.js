import {userBuilder} from '../support/generate'

describe('Various configurations of adding items to cart without discount', () => {
    const answers = {
        q1: ['1'],
        q2: ['1'],
        q3: ['1'],
        q4: ['1', '2'],
        q5: ['1'],
        q6: ['1', '2'],
        q7: ['1', '4', '7'],
        q8: ['0'],
        q9: ['1'],
        q10: ['1', '3', '5'],
        q11: [['0', '1']],
        q12: ['1', '3', '5'],
        q13: ['0', '3', '4'],
        q14: ['3', '2', '4'],
        q15: ['WOMAN', 'test', '1985', '5'],
    }

    before(() => {
        cy.signIn({
            email: 'testuser@imyme.com',
            password: '123456',
        }).then(() => {
            cy.deleteAllAddresses().then(() => {
                cy.addDefaultAddress().then(() => {
                    localStorage.clear()
                })
            })
        })
    })

    beforeEach(() => {
        sessionStorage.clear()
        sessionStorage.setItem('surveyAnswers', JSON.stringify(answers))
    })

    it('adds serum to the cart and orders without discount while logged out', () => {
        cy.visit('/')
            .getByText(/matching start/i)
            .click()
            .wait(1000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/survey/summary`)
            .getByText(/これでマッチングする/i)
            .click()
            .wait(3000)
            .url()
            .should('match', /results/)
        cy.matchImageSnapshot('results', {
            disableTimersAndAnimations: true,
        })
            .getAllByText(/購入する/i)
            .first()
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/login?next=cart`)
            .get('[type="email"]')
            .type('testuser@imyme.com')
            .get('[type="password"]')
            .type('123456')
            .get('[type="submit"]')
            .click()
            .url()
            .should('match', /cart/)
        cy.matchImageSnapshot('cart', {
            disableTimersAndAnimations: true,
        })
            .get('.btn-secondary > .m-auto')
            .click()
            .wait(3000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/`)
            .getByText(/次へ進む/i)
            .click()
            .wait(3000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/payment`)
    })

    it('adds soap to the cart and orders without discount while logged out', () => {
        cy.visit('/')
            .getByText(/matching start/i)
            .click()
            .wait(1000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/survey/summary`)
            .getByText(/これでマッチングする/i)
            .click()
            .wait(3000)
            .url()
            .should('match', /results/)
            .getAllByText(/購入する/i)
            .last()
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/login?next=cart`)
            .get('[type="email"]')
            .type('testuser@imyme.com')
            .get('[type="password"]')
            .type('123456')
            .get('[type="submit"]')
            .click()
            .wait(3000)
            .url()
            .should('match', /cart/)
            .get('.btn-secondary > .m-auto')
            .click()
            .wait(3000)
            .get('.product-content')
            .should('have.length', 1)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/`)
            .getByText(/次へ進む/i)
            .click()
            .wait(3000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/payment`)
    })
})

describe('Various configurations of adding items to cart with discount', () => {
    const answers = {
        q1: ['1'],
        q2: ['1'],
        q3: ['1'],
        q4: ['1', '2'],
        q5: ['1'],
        q6: ['1', '2'],
        q7: ['1', '4', '7'],
        q8: ['0'],
        q9: ['1'],
        q10: ['1', '3', '5'],
        q11: [['0', '1']],
        q12: ['1', '3', '5'],
        q13: ['0', '3', '4'],
        q14: ['3', '2', '4'],
        q15: ['WOMAN', 'test', '1985', '5'],
    }

    before(() => {
        cy.signIn({
            email: 'testuser_20190625_01@imyme.com',
            password: '123456',
        }).then(() => {
            cy.deleteAllAddresses().then(() => {
                cy.addDefaultAddress().then(() => {
                    localStorage.clear()
                })
            })
        })
    })

    beforeEach(() => {
        sessionStorage.clear()
        sessionStorage.setItem('surveyAnswers', JSON.stringify(answers))
    })

    it('adds serum to the cart and orders with serum discount while logged out', () => {
        cy.visit('/')
            .getByText(/matching start/i)
            .click()
            .wait(1000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/survey/summary`)
            .getByText(/これでマッチングする/i)
            .click()
            .wait(3000)
            .url()
            .should('match', /results/)
            .getAllByText(/購入する/i)
            .first()
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/login?next=cart`)
            .get('[type="email"]')
            .type('testuser_20190625_01@imyme.com')
            .get('[type="password"]')
            .type('123456')
            .get('[type="submit"]')
            .click()
            .wait(3000)
            .url()
            .should('match', /cart/)
            .get('.btn-secondary > .m-auto')
            .click()
            .wait(3000)
            .get('.product-content')
            .should('have.length', 1)
            .get('.product-price-discounted')
            .should('be.visible')
            .get('.product-price-discounted')
            .should('contain', '¥5,900')
            .get('.product-price')
            .last()
            .should('contain', '¥2,950')
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/`)
            .getByText(/次へ進む/i)
            .click()
            .wait(3000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/payment`)
    })

    it('adds soap to the cart and orders with serum discount while logged out', () => {
        cy.visit('/')
            .getByText(/matching start/i)
            .click()
            .wait(1000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/survey/summary`)
            .getByText(/これでマッチングする/i)
            .click()
            .wait(3000)
            .url()
            .should('match', /results/)
            .getAllByText(/購入する/i)
            .last()
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/login?next=cart`)
            .get('[type="email"]')
            .type('testuser_20190625_01@imyme.com')
            .get('[type="password"]')
            .type('123456')
            .get('[type="submit"]')
            .click()
            .wait(3000)
            .url()
            .should('match', /cart/)
            .get('.btn-secondary > .m-auto')
            .click()
            .wait(3000)
            .get('.product-content')
            .should('have.length', 2)
            .get('.product-price-discounted')
            .should('be.visible')
            .get('.product-price-discounted')
            .should('contain', '¥5,900')
            .get('.product-price')
            .last()
            .should('contain', '¥2,950')
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/`)
            .getByText(/次へ進む/i)
            .click()
            .wait(3000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/payment`)
    })

    it('adds serum to the cart and orders with soap discount while logged out', () => {
        cy.visit('/')
            .getByText(/matching start/i)
            .click()
            .wait(1000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/survey/summary`)
            .getByText(/これでマッチングする/i)
            .click()
            .wait(3000)
            .url()
            .should('match', /results/)
            .getAllByText(/購入する/i)
            .first()
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/login?next=cart`)
            .get('[type="email"]')
            .type('testuser_20190625_01@imyme.com')
            .get('[type="password"]')
            .type('123456')
            .get('[type="submit"]')
            .click()
            .wait(3000)
            .url()
            .should('match', /cart/)
            .get('[type="radio"]')
            .last()
            .check()
            .get('.btn-secondary > .m-auto')
            .click()
            .wait(3000)
            .get('.product-content')
            .should('have.length', 2)
            .get('.product-price-discounted')
            .should('be.visible')
            .get('.product-price-discounted')
            .should('contain', '¥2,300')
            .get('.product-price')
            .last()
            .should('contain', '¥0')
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/`)
            .getByText(/次へ進む/i)
            .click()
            .wait(3000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/payment`)
    })

    it('adds soap to the cart and orders with soap discount while logged out', () => {
        cy.visit('/')
            .getByText(/matching start/i)
            .click()
            .wait(1000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/survey/summary`)
            .getByText(/これでマッチングする/i)
            .click()
            .wait(3000)
            .url()
            .should('match', /results/)
            .getAllByText(/購入する/i)
            .last()
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/login?next=cart`)
            .get('[type="email"]')
            .type('testuser_20190625_01@imyme.com')
            .get('[type="password"]')
            .type('123456')
            .get('[type="submit"]')
            .click()
            .wait(3000)
            .url()
            .should('match', /cart/)
            .get('[type="radio"]')
            .last()
            .check()
            .get('.btn-secondary > .m-auto')
            .click()
            .wait(3000)
            .get('.product-content')
            .should('have.length', 1)
            .get('.product-price-discounted')
            .should('be.visible')
            .get('.product-price-discounted')
            .should('contain', '¥2,300')
            .get('.product-price')
            .last()
            .should('contain', '¥0')
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/`)
            .getByText(/次へ進む/i)
            .click()
            .wait(3000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/payment`)
    })

    it('adds serum and soap to the cart and orders with serum discount while logged out', () => {
        cy.visit('/')
            .getByText(/matching start/i)
            .click()
            .wait(1000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/survey/summary`)
            .getByText(/これでマッチングする/i)
            .click()
            .wait(3000)
            .url()
            .should('match', /results/)
            .getAllByText(/購入する/i)
            .first()
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/login?next=cart`)
            .get('[type="email"]')
            .type('testuser_20190625_01@imyme.com')
            .get('[type="password"]')
            .type('123456')
            .get('[type="submit"]')
            .click()
            .wait(3000)
            .url()
            .should('match', /cart/)
            .visit('/results')
            .getAllByText(/購入する/i)
            .last()
            .click()
            .wait(3000)
            .get('[type="radio"]')
            .first()
            .check()
            .get('.btn-secondary > .m-auto')
            .click()
            .wait(3000)
            .get('.product-content')
            .should('have.length', 2)
            .get('.product-price-discounted')
            .should('be.visible')
            .get('.product-price-discounted')
            .should('contain', '¥5,900')
            .get('.product-price')
            .last()
            .should('contain', '¥2,300')
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/`)
            .getByText(/次へ進む/i)
            .click()
            .wait(3000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/payment`)
    })

    it('adds serum and soap to the cart and orders with soap discount while logged out', () => {
        cy.visit('/')
            .getByText(/matching start/i)
            .click()
            .wait(1000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/survey/summary`)
            .getByText(/これでマッチングする/i)
            .click()
            .wait(3000)
            .url()
            .should('match', /results/)
            .getAllByText(/購入する/i)
            .first()
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/login?next=cart`)
            .get('[type="email"]')
            .type('testuser_20190625_01@imyme.com')
            .get('[type="password"]')
            .type('123456')
            .get('[type="submit"]')
            .click()
            .wait(3000)
            .url()
            .should('match', /cart/)
            .visit('/results')
            .getAllByText(/購入する/i)
            .last()
            .click()
            .wait(3000)
            .get('[type="radio"]')
            .last()
            .check()
            .get('.btn-secondary > .m-auto')
            .click()
            .wait(3000)
            .get('.product-content')
            .should('have.length', 2)
            .get('.product-price-discounted')
            .should('be.visible')
            .get('.product-price-discounted')
            .should('contain', '¥2,300')
            .get('.product-price')
            .last()
            .should('contain', '¥0')
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/`)
            .getByText(/次へ進む/i)
            .click()
            .wait(3000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/payment`)
    })

    it('adds serum and serum to the cart and orders with serum discount while logged out', () => {
        cy.visit('/')
            .getByText(/matching start/i)
            .click()
            .wait(1000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/survey/summary`)
            .getByText(/これでマッチングする/i)
            .click()
            .wait(3000)
            .url()
            .should('match', /results/)
            .getAllByText(/購入する/i)
            .first()
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/login?next=cart`)
            .get('[type="email"]')
            .type('testuser_20190625_01@imyme.com')
            .get('[type="password"]')
            .type('123456')
            .get('[type="submit"]')
            .click()
            .wait(3000)
            .url()
            .should('match', /cart/)
            .visit('/results')
            .getAllByText(/購入する/i)
            .first()
            .click()
            .wait(3000)
            .get('[type="radio"]')
            .first()
            .check()
            .get('.btn-secondary > .m-auto')
            .click()
            .wait(3000)
            .get('.product-content')
            .should('have.length', 2)
            .get('.product-price-discounted')
            .should('be.visible')
            .get('.product-price-discounted')
            .should('contain', '¥5,900')
            .get('.product-title > :nth-child(2) > :nth-child(2)')
            .should('contain', '¥2,950')
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/`)
            .getByText(/次へ進む/i)
            .click()
            .wait(3000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/payment`)
    })

    it('adds serum and serum to the cart and orders with soap discount while logged out', () => {
        cy.visit('/')
            .getByText(/matching start/i)
            .click()
            .wait(1000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/survey/summary`)
            .getByText(/これでマッチングする/i)
            .click()
            .wait(3000)
            .url()
            .should('match', /results/)
            .getAllByText(/購入する/i)
            .first()
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/login?next=cart`)
            .get('[type="email"]')
            .type('testuser_20190625_01@imyme.com')
            .get('[type="password"]')
            .type('123456')
            .get('[type="submit"]')
            .click()
            .wait(3000)
            .url()
            .should('match', /cart/)
            .visit('/results')
            .getAllByText(/購入する/i)
            .first()
            .click()
            .wait(3000)
            .get('[type="radio"]')
            .last()
            .check()
            .get('.btn-secondary > .m-auto')
            .click()
            .wait(3000)
            .get('.product-content')
            .should('have.length', 3)
            .get('.product-price-discounted')
            .should('be.visible')
            .get('.product-price-discounted')
            .should('contain', '¥2,300')
            .get('.product-title > :nth-child(2) > :nth-child(2)')
            .should('contain', '¥0')
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/`)
            .getByText(/次へ進む/i)
            .click()
            .wait(3000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/payment`)
    })

    it('adds soap and soap to the cart and orders with serum discount while logged out', () => {
        cy.visit('/')
            .getByText(/matching start/i)
            .click()
            .wait(1000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/survey/summary`)
            .getByText(/これでマッチングする/i)
            .click()
            .wait(3000)
            .url()
            .should('match', /results/)
            .getAllByText(/購入する/i)
            .last()
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/login?next=cart`)
            .get('[type="email"]')
            .type('testuser_20190625_01@imyme.com')
            .get('[type="password"]')
            .type('123456')
            .get('[type="submit"]')
            .click()
            .wait(3000)
            .url()
            .should('match', /cart/)
            .visit('/results')
            .getAllByText(/購入する/i)
            .last()
            .click()
            .wait(3000)
            .get('[type="radio"]')
            .first()
            .check()
            .get('.btn-secondary > .m-auto')
            .click()
            .wait(3000)
            .get('.product-content')
            .should('have.length', 3)
            .get('.product-price-discounted')
            .should('be.visible')
            .get('.product-price-discounted')
            .should('contain', '¥5,900')
            .get('.product-price')
            .last()
            .should('contain', '¥2,950')
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/`)
            .getByText(/次へ進む/i)
            .click()
            .wait(3000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/payment`)
    })

    it('adds soap and soap to the cart and orders with soap discount while logged out', () => {
        cy.visit('/')
            .getByText(/matching start/i)
            .click()
            .wait(1000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/survey/summary`)
            .getByText(/これでマッチングする/i)
            .click()
            .wait(3000)
            .url()
            .should('match', /results/)
            .getAllByText(/購入する/i)
            .last()
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/login?next=cart`)
            .get('[type="email"]')
            .type('testuser_20190625_01@imyme.com')
            .get('[type="password"]')
            .type('123456')
            .get('[type="submit"]')
            .click()
            .wait(3000)
            .url()
            .should('match', /cart/)
            .visit('/results')
            .getAllByText(/購入する/i)
            .last()
            .click()
            .wait(3000)
            .get('[type="radio"]')
            .last()
            .check()
            .get('.btn-secondary > .m-auto')
            .click()
            .wait(3000)
            .get('.product-content')
            .should('have.length', 2)
            .get('.product-price-discounted')
            .should('be.visible')
            .get('.product-price-discounted')
            .should('contain', '¥2,300')
            .get('.product-title > :nth-child(2) > :nth-child(2)')
            .should('contain', '¥0')
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/`)
            .getByText(/次へ進む/i)
            .click()
            .wait(3000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/payment`)
    })
})

describe('Adding, editing and removing shipping address for order', () => {
    const answers = {
        q1: ['1'],
        q2: ['1'],
        q3: ['1'],
        q4: ['1', '2'],
        q5: ['1'],
        q6: ['1', '2'],
        q7: ['1', '4', '7'],
        q8: ['0'],
        q9: ['1'],
        q10: ['1', '3', '5'],
        q11: [['0', '1']],
        q12: ['1', '3', '5'],
        q13: ['0', '3', '4'],
        q14: ['3', '2', '4'],
        q15: ['WOMAN', 'test', '1985', '5'],
    }

    before(() => {
        cy.signIn({
            email: 'testuser@imyme.com',
            password: '123456',
        }).then(() => {
            cy.deleteAllAddresses().then(() => {
                localStorage.clear()
            })
        })
    })

    beforeEach(() => {
        sessionStorage.clear()
        sessionStorage.setItem('surveyAnswers', JSON.stringify(answers))
    })

    it('adds serum to the cart and orders without discount while logged out', () => {
        cy.visit('/')
            .getByText(/matching start/i)
            .click()
            .wait(1000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/survey/summary`)
            .getByText(/これでマッチングする/i)
            .click()
            .wait(3000)
            .url()
            .should('match', /results/)
            .getAllByText(/購入する/i)
            .first()
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/login?next=cart`)
            .get('[type="email"]')
            .type('testuser@imyme.com')
            .get('[type="password"]')
            .type('123456')
            .get('[type="submit"]')
            .click()
            .url()
            .should('match', /cart/)
            .get('.btn-secondary > .m-auto')
            .click()
            .wait(3000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/new`)
        cy.matchImageSnapshot('newAddress', {
            disableTimersAndAnimations: true,
        })
            .get('[id="firstname"]')
            .type('Test')
            .get('[id="lastname"]')
            .type('User')
            .get('[id="phone"]')
            .type('09099884455')
            .get('[id="zip"]')
            .type('0040001')
            .get('[id="building"]')
            .type('Test House 444')
            .getByText(/save new address/i)
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/`)
        cy.matchImageSnapshot('shippingAddress', {
            disableTimersAndAnimations: true,
        })
            .getByText(/次へ進む/i)
            .click()
            .wait(3000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/payment`)
    })

    it('add second address', () => {
        cy.visit('/')
            .getByText(/matching start/i)
            .click()
            .wait(1000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/survey/summary`)
            .getByText(/これでマッチングする/i)
            .click()
            .wait(10000)
            .url()
            .should('match', /results/)
            .get(
                ':nth-child(1) > :nth-child(1) > .results-product-layout-container > .results-product-buy-btn > .btn',
            )
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/login?next=cart`)
            .get('[type="email"]')
            .type('testuser@imyme.com')
            .get('[type="password"]')
            .type('123456')
            .get('[type="submit"]')
            .click()
            .wait(1000)
            .url()
            .should('match', /cart/)
            .getByText(/ご購入手続き/i)
            .click()
            .wait(1000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/`)
            .get('.edit--button')
            .click()
            .url()
            .should(
                'eq',
                `${Cypress.config().baseUrl}/order/address/registered`,
            )
        cy.matchImageSnapshot('registeredAddressList', {
            disableTimersAndAnimations: true,
        })
            .get('[type="radio"]')
            .check(null, {force: true})
            .get('.btn-secondary')
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/new`)
            .get('[id="firstname"]')
            .type('Test')
            .get('[id="lastname"]')
            .type('User')
            .get('[id="phone"]')
            .type('09099884455')
            .get('[id="zip"]')
            .type('0100002')
            .get('[id="building"]')
            .type('Test House 222')
            .getByText(/save new address/i)
            .click()
            .url()
    })

    it('delete all addresses', () => {
        cy.visit('/')
            .getByText(/matching start/i)
            .click()
            .wait(1000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/survey/summary`)
            .getByText(/これでマッチングする/i)
            .click()
            .wait(10000)
            .url()
            .should('match', /results/)
            .get(
                ':nth-child(1) > :nth-child(1) > .results-product-layout-container > .results-product-buy-btn > .btn',
            )
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/login?next=cart`)
            .get('[type="email"]')
            .type('testuser@imyme.com')
            .get('[type="password"]')
            .type('123456')
            .get('[type="submit"]')
            .click()
            .wait(1000)
            .url()
            .should('match', /cart/)
            .getByText(/ご購入手続き/i)
            .click()
            .wait(1000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/`)
            .get('.edit--button')
            .click()
            .url()
            .should(
                'eq',
                `${Cypress.config().baseUrl}/order/address/registered`,
            )
            .get('[type="radio"]')
            .should('have.length', 3)
            .getAllByText(/削除/i)
            .first()
            .click()
            .get('[type="radio"]')
            .should('have.length', 2)
            .getAllByText(/削除/i)
            .first()
            .click()
            .get('[type="radio"]')
            .should('have.length', 1)
            .get('.btn')
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/new`)
    })
})

describe('Ordering when user has default address but no phone number', () => {
    const answers = {
        q1: ['1'],
        q2: ['1'],
        q3: ['1'],
        q4: ['1', '2'],
        q5: ['1'],
        q6: ['1', '2'],
        q7: ['1', '4', '7'],
        q8: ['0'],
        q9: ['1'],
        q10: ['1', '3', '5'],
        q11: [['0', '1']],
        q12: ['1', '3', '5'],
        q13: ['0', '3', '4'],
        q14: ['3', '2', '4'],
        q15: ['WOMAN', 'test', '1985', '5'],
    }

    const user = userBuilder()

    before(() => {
        console.log(user)
        cy.createUserShopify(user).then(customer => {
            cy.createUserImyme(customer).then(() => {
                cy.signIn(user).then(() => {
                    cy.addDefaultAddress().then(() => {
                        sessionStorage.clear()
                        localStorage.clear()
                        sessionStorage.setItem(
                            'surveyAnswers',
                            JSON.stringify(answers),
                        )
                    })
                })
            })
        })
    })

    beforeEach(() => {
        sessionStorage.clear()
        localStorage.clear()
        sessionStorage.setItem('surveyAnswers', JSON.stringify(answers))
    })

    it('adds serum to the cart and orders with discount while logged out', () => {
        cy.visit('/')
            .getByText(/matching start/i)
            .click()
            .wait(1000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/survey/summary`)
            .getByText(/これでマッチングする/i)
            .click()
            .wait(10000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/results`)
            .getAllByText(/購入する/i)
            .first()
            .click()
            .url()
            .should('eq', `${Cypress.config().baseUrl}/login?next=cart`)
            .get('[type="email"]')
            .type(user.email)
            .get('[type="password"]')
            .type(user.password)
            .get('[type="submit"]')
            .click()
            .wait(5000)
            .url()
            .should('match', /cart/)
            .wait(5000)
            .get('.btn-secondary > .m-auto')
            .click()
            .wait(3000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/`)
            .get('[id="delevery-details"]')
            .should('be.visible')
        cy.matchImageSnapshot('missingPhoneInput', {
            disableTimersAndAnimations: true,
        })
            .get('[id="phone"]')
            .type(`090${user.phone}`)
            .get('[type="submit"]')
            .click()
            .wait(5000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/payment`)
            .visit('/cart')
            .wait(5000)
            .get('.btn-secondary > .m-auto')
            .click()
            .wait(3000)
            .url()
            .should('eq', `${Cypress.config().baseUrl}/order/address/`)
            .get('[id="delevery-details"]')
            .should('not.exist')
    })
})
